env:
    global:
        - REPO_DIR=numpy
        # Also see CRON_COMMIT below
        - BUILD_COMMIT=master
        - BUILD_DEPENDS=cython==0.29.21
        - TEST_DEPENDS="pytest hypothesis cffi pytz"
        # Commit when running from cron job
        - CRON_COMMIT=master
        - EXTRA_ARGV="'--disable-pytest-warnings'"

language: python
dist: bionic
services: docker
os: linux

jobs:
  include:
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - MB_ML_VER=2014
        - MB_PYTHON_VERSION=3.7
        - DEBUG_PRINT=1
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - MB_ML_VER=2014
        - MB_PYTHON_VERSION=3.8
        - DEBUG_PRINT=1
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - MB_ML_VER=2014
        - MB_PYTHON_VERSION=3.9
        - DEBUG_PRINT=1
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}

before_install:
    - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
          CONTAINER="pre-release";
          BUILD_COMMIT=${CRON_COMMIT};
          NPY_RELAXED_STRIDES_DEBUG=1;
      else
          CONTAINER=wheels;
      fi
    # Set DEBUG_PRINT environment variable in settings
    - if [ -n "${DEBUG_PRINT}" ]; then set -x; fi
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - source extra_functions.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - ./patch_code.sh $REPO_DIR
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # trigger an upload to the shared ecosystem
    # infrastructure at: https://anaconda.org/scipy-wheels-nightly
    # for cron jobs only (restricted to master branch once
    # per week)
    # The tokens are set from
    # https://travis-ci.org/github/MacPython/numpy-wheels/settings
    # originally generated at
    # anaconda.org/scipy-wheels-nightly/settings/access
    - if [ "$TRAVIS_BRANCH" == "master" ] ; then
          ANACONDA_ORG="scipy-wheels-nightly";
          TOKEN=${NUMPY_NIGHTLY_UPLOAD_TOKEN};
      else
          ANACONDA_ORG="multibuild-wheels-staging";
          TOKEN=${NUMPY_STAGING_UPLOAD_TOKEN};
      fi
    - pip install git+https://github.com/Anaconda-Server/anaconda-client.git@1.7.2;
    - if [ -n "${TOKEN}" ] ; then
        anaconda -t ${TOKEN} upload -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
      fi
